// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	resumer "github.com/umputun/cronn/app/resumer"
)

// Resumer is an autogenerated mock type for the Resumer type
type Resumer struct {
	mock.Mock
}

// List provides a mock function with given fields:
func (_m *Resumer) List() []resumer.Cmd {
	ret := _m.Called()

	var r0 []resumer.Cmd
	if rf, ok := ret.Get(0).(func() []resumer.Cmd); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]resumer.Cmd)
		}
	}

	return r0
}

// OnFinish provides a mock function with given fields: fname
func (_m *Resumer) OnFinish(fname string) error {
	ret := _m.Called(fname)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(fname)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OnStart provides a mock function with given fields: cmd
func (_m *Resumer) OnStart(cmd string) (string, error) {
	ret := _m.Called(cmd)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(cmd)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cmd)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// String provides a mock function with given fields:
func (_m *Resumer) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
